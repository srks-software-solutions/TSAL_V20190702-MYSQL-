@*@model Tata.Models.tblshiftdetail*@
@model IList<Tata.Models.tblshiftdetail>

@{
    ViewBag.Title = "Create";
}

<style>
    input {
        font-style: oblique;
        color: blue;
    }
</style>

<style>
    .fields {
        width: 79.5%;
        white-space: nowrap;
    }

    .first {
        display: inline-block;
        width: 10%;
        float: none;
        padding-left: 0px;
        padding-right: -2px;
        margin-right: -2px;
        white-space: nowrap;
    }

    .second {
        display: inline-block;
        padding-right: 0px;
        white-space: normal;
        padding-left: 9%;
    }

    .pad {
        padding-left: 9%;
    }
</style>



@{
    List<SelectListItem> NextDay = new List<SelectListItem>();

    NextDay.Add(new SelectListItem
    {
        Text = "NO",
        Value = "0",
    });
    NextDay.Add(new SelectListItem
    {
        Text = "YES",
        Value = "1",
    });
}
@{
    List<SelectListItem> IsGShift = new List<SelectListItem>();

    IsGShift.Add(new SelectListItem
    {
        Text = "NO",
        Value = "0",
    });
    IsGShift.Add(new SelectListItem
    {
        Text = "YES",
        Value = "1",
    });
}

@using (Html.BeginForm("Create", "ShiftDetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)  
    <div class="wrp clearfix">@*style="background-color:red" box outside create role*@
        <div class="fluid">
            <div class="widget col-md- grid12">
                <div class="widget-header" style="background-color: red">
                    <div class="widget-title">
                        <span style="font-style: oblique; font-size: 100%">Create Shift Detail</span>
                    </div>
                </div>
                <!-- /widget-header -->

                <div id="Error">
                    @if (TempData["Error"] != null)
                    {
                        <pre>
<span style="font-family:Calibri">@TempData["Error"]</span>
                        </pre>
                    }
                </div>

                <div class="widget-content pad20f">
                    <label for="input-2" class="stacked-label" style="resize: horizontal; width: 40%">Shift Method Name</label>
                    @Html.DropDownList("ShiftMethod", null, "--Select ShiftMethod--", new { @id = "ShiftMethod", @class = "form-control", @name = "ShiftMethod", @required = "required", @style = "aria-expanded:false;width:89.7%" })
                </div>

                <div class="widget-content pad20f" id="shift1">
                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftDetailsName</label>
                    @Html.TextBoxFor(model => model[0].ShiftDetailsName, new { @id = "ShiftDetailsName", @name = "ShiftDetailsName", @class = "second SRKSRequired", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Name", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">ShiftDetails Description</label>
                    @Html.TextBoxFor(model => model[0].ShiftDetailsDesc, new { @id = "ShiftDetailsDesc", @name = "ShiftDetailsDesc", @class = "second SRKSRequired", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Description", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Does Shift Span to Next Day</label>
                    @Html.DropDownListFor(model => model[0].NextDay, NextDay, new { @id = "NextDay1", @name = "NextDay1", @class = "second SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["NextDay"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Is it General Shift</label>
                    @Html.DropDownListFor(model => model[0].IsGShift, IsGShift, new { @id = "IsGShift1", @name = "IsGShift1", @class = "second SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["IsGShift"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftStart Time</label>
                    @Html.TextBoxFor(model => model[0].ShiftStartTime, new { @id = "ShiftStartTime", @name = "ShiftStartTime", @class = "second fdate f1 SRKSRequired", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftStart Time", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftEndTime</label>
                    @Html.TextBoxFor(model => model[0].ShiftEndTime, new { @id = "ShiftEndTime", @name = "ShiftEndTime", @class = "second fdate t1 SRKSRequired", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftEnd Time", @required = "required" })

                    <hr />
                </div>

                <div class="widget-content pad20f" id="shift2">
                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftDetailsName</label>
                    @Html.TextBoxFor(model => model[1].ShiftDetailsName, new { @id = "ShiftDetailsName", @class = "second SRKSRequired", @name = "ShiftDetailsName", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Name", })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">ShiftDetails Description</label>
                    @Html.TextBoxFor(model => model[1].ShiftDetailsDesc, new { @id = "ShiftDetailsDesc", @class = "second SRKSRequired", @name = "ShiftDetailsDesc", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Description", })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Does Shift Span to Next Day</label>
                    @Html.DropDownListFor(model => model[1].NextDay, NextDay, new { @id = "NextDay2", @name = "NextDay2", @class = "second pad SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["NextDay"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Is it General Shift</label>
                    @Html.DropDownListFor(model => model[1].IsGShift, IsGShift, new { @id = "IsGShift2", @name = "IsGShift2", @class = "second pad SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["IsGShift"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftStart Time</label>
                    @Html.TextBoxFor(model => model[1].ShiftStartTime, new { @id = "ShiftStartTime", @class = "second fdate f2 SRKSRequired", @name = "ShiftStartTime", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftStart Time", })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftEndTime</label>
                    @Html.TextBoxFor(model => model[1].ShiftEndTime, new { @id = "ShiftEndTime", @class = "second fdate t2 SRKSRequired", @name = "ShiftEndTime", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftEnd Time", })

                    <hr />
                </div>

                <div class="widget-content pad20f" id="shift3">
                    <label for="input-1" class="stacked-label" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftDetailsName</label>
                    @Html.TextBoxFor(model => model[2].ShiftDetailsName, new { @id = "ShiftDetailsName", @class = "second SRKSRequired", @name = "ShiftDetailsName", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Name", })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">ShiftDetails Description</label>
                    @Html.TextBoxFor(model => model[2].ShiftDetailsDesc, new { @id = "ShiftDetailsDesc", @class = "second SRKSRequired", @name = "ShiftDetailsDesc", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Description", })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Does Shift Span to Next Day</label>
                    @Html.DropDownListFor(model => model[2].NextDay, NextDay, new { @id = "NextDay3", @name = "NextDay3", @class = "second pad SRKSRequired", @style = "font-size:75%;width:25%", @value = ViewData["NextDay"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Is it General Shift</label>
                    @Html.DropDownListFor(model => model[2].IsGShift, IsGShift, new { @id = "IsGShift3", @name = "IsGShift3",@class = "second SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["IsGShift"] })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftStart Time</label>
                    @Html.TextBoxFor(model => model[2].ShiftStartTime, new { @id = "ShiftStartTime", @class = "second fdate f3 SRKSRequired", @name = "ShiftStartTime", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftStart Time" })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftEndTime</label>
                    @Html.TextBoxFor(model => model[2].ShiftEndTime, new { @id = "ShiftEndTime", @class = "second fdate t3 SRKSRequired", @name = "ShiftEndTime", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftEnd Time", })
                    <hr />
                </div>

                <div class="widget-content pad20f" id="shift4">
                    <label for="input-1" class="stacked-label" style="resize: horizontal; padding-top: 2%; width: 20%; color: blue; font-style: oblique">ShiftDetailsName</label>
                    @Html.TextBoxFor(model => model[3].ShiftDetailsName, new { @id = "ShiftDetailsName", @class = "second SRKSRequired", @name = "ShiftDetailsName", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Name" })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">ShiftDetails Description</label>
                    @Html.TextBoxFor(model => model[3].ShiftDetailsDesc, new { @id = "ShiftDetailsDesc", @class = "second SRKSRequired", @name = "ShiftDetailsDesc", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftDetails Description" })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Does Shift Span to Next Day</label>
                    @Html.DropDownListFor(model => model[3].NextDay, NextDay, new { @id = "NextDay4", @name = "NextDay4", @class = "second pad SRKSRequired", @style = "font-size:75%;width:25%", @value = ViewData["NextDay"] })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 20%; color: blue; font-style: oblique">Is it General Shift</label>
                    @Html.DropDownListFor(model => model[1].IsGShift, IsGShift, new { @id = "IsGShift4", @name = "IsGShift4", @class = "second SRKSRequired", @style = "font-size:75%;width:25%", @required = "required", @value = ViewData["IsGShift"] })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftStart Time</label>
                    @Html.TextBoxFor(model => model[3].ShiftStartTime, new { @id = "ShiftStartTime", @class = "second fdate f4 SRKSRequired", @name = "ShiftStartTime", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftStart Time", })

                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; padding-top: 2%; color: blue; font-style: oblique">ShiftEndTime</label>
                    @Html.TextBoxFor(model => model[3].ShiftEndTime, new { @id = "ShiftEndTime", @class = "second fdate t4 SRKSRequired", @name = "ShiftEndTime", style = "font-size:75%;width:25%", @placeholder = "Enter ShiftEnd Time", })
                </div>

                <div class="widget-content pad20f">
                    <div style="width: 3%; display: inline-block; height: inherit"></div>
                    @Html.ActionLink(" Back ", "Index", new { }, new { @class = "btn stacked-input fa fa-reply fa-1x", @style = "text-decoration:none;display:inline-block;color:black" })
                    <div style="width: 20%; display: inline-block; height: inherit"></div>
                    <input type="submit" value="Create" id="submitsrks" class="btn orange btn-lg" style="width: 30%; display: inline-block; height: inherit; margin-top: 2%; background-color: orange; color: black; font-size: 95%" />
                </div>

                <!-- /widget-content -->
            </div>
            <!-- /widget -->
        </div>
        <!-- /Class-fluid-->
    </div>
}

<script src="~/js/jquery-2.1.4.min.js"></script>
<script src="~/Content1/jquery.datetimepicker.js" type="text/javascript"></script>
@*For validating Time. *@
<script type="text/javascript" src="~/js/jValidations.js"></script>

<script>
    $(".fdate").keypress(function (event) { event.preventDefault(); });
</script>
<script>
    $(".t1").on("change", function (e) {
        var fromTime = $(".f1").val();
        var ToTime = $(".t1").val();
        var spanstoNextDat = $(this).siblings("#NextDay1").val();
        if (spanstoNextDat == "0") {
            var result = TimeCompareHHmm(fromTime, ToTime);
            if (result == -1 || result == -11) {
               // alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
                $(this).val("");
                alert("Invalid Shift Timings for " + ShiftDetailsName);
            }
        }
    });
    $(".t2").on("change", function (e) {
        var fromTime = $(".f2").val();
        var ToTime = $(".t2").val();
        var spanstoNextDat = $(this).siblings("#NextDay2").val();
        if (spanstoNextDat == "0") {
            var result = TimeCompareHHmm(fromTime, ToTime);
            //alert("t2", result)
            if (result == -1 || result == -11) {
               // alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
                $(this).val("");
                alert("Invalid Shift Timings for " + ShiftDetailsName);
            }
        }
    });
    $(".t3").on("change", function (e) {
        var fromTime = $(".f3").val();
        var ToTime = $(".t3").val();
        var spanstoNextDat = $(this).siblings("#NextDay3").val();
        if (spanstoNextDat == "0") {
            var result = TimeCompareHHmm(fromTime, ToTime);
            if (result == -1 || result == -11) {
               // alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
                $(this).val("");
                alert("Invalid Shift Timings for " + ShiftDetailsName);
            }
        }
    });

    $(".f2").on("change", function (e) {
        //if its general shift dont check for overlapping with previos shift
        var isGeneralShift = $(this).siblings("#IsGShift2").val();
        alert(isGeneralShift);
        if (isGeneralShift == "0") {
            var fromTime = $(".t1").val();
            var ToTime = $(".f2").val();
           // alert(fromTime + " " + ToTime);
            var result = TimeCompareHHmm(fromTime, ToTime);
           // alert("result"+result)
            if (result == -1 || result == 10) {
               // alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
               // alert(ShiftDetailsName);
                $(this).val("");
                alert("Overlapping Shift Timings for " + ShiftDetailsName);
            }
        }
    });
    $(".f3").on("change", function (e) {
        //if its general shift dont check for overlapping with previos shift
        var isGeneralShift = $(this).siblings("#IsGShift3").val();
        //alert(isGeneralShift);
        if (isGeneralShift == "0") {
            var fromTime = $(".t2").val();
            var ToTime = $(".f3").val();
            var result = TimeCompareHHmm(fromTime, ToTime);
            if (result == -1 || result == 10) {
                //alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
                $(this).val("");
                alert("Overlapping Shift Timings for " + ShiftDetailsName);
            }
        }
    });
    $(".t4").on("change", function (e) {
        var fromTime = $(".f4").val();
        var ToTime = $(".t4").val();
        var spanstoNextDat = $(this).siblings("#NextDay4").val();
        if (spanstoNextDat == "0") {
            var result = TimeCompareHHmm(fromTime, ToTime);
            if (result == -1 || result == -11) {
               // alert("valid Time");
            }
            else {
                var ShiftDetailsName = $(this).siblings("#ShiftDetailsName").val();
                $(this).val("");
                alert("Invalid Shift Timings for " + ShiftDetailsName);
            }
        }
    });


    $(document).ready(function () {
        $("#shift1").hide();
        $("#shift2").hide();
        $("#shift3").hide();
        $("#shift4").hide();
    });

    $(document).ready(function () {
        $("#ShiftMethod").change(function (evt) {
            var selectedID = $("#ShiftMethod option:selected").val();
            $.getJSON("/ShiftDetails/GetShifts", { shiftsCount: selectedID }, function (data) {
                var NumberOfShifts = data;
                //alert(NumberOfShifts)
                //based on this data hide or show those 4 Shifts.
                if (NumberOfShifts == 1) {
                    $("#shift1").show();
                    $("#shift2").hide();
                    $("#shift3").hide();
                    $("#shift4").hide();
                }
                else if (NumberOfShifts == 2) {
                    $("#shift1").show();
                    $("#shift2").show();
                    $("#shift3").hide();
                    $("#shift4").hide();
                    //adding required field to elements in shift2

                    //$("#shift2 > .form-control").attr("required", required); //didnot work
                    $("#shift2 > .SRKSRequired").prop("required", true);
                    $("#shift3 > .SRKSRequired").prop("required", false);
                    $("#shift4 > .SRKSRequired").prop("required", false);
                }
                else if (NumberOfShifts == 3) {
                    $("#shift1").show();
                    $("#shift2").show();
                    $("#shift3").show();
                    $("#shift4").hide();
                    $("#shift2 > .SRKSRequired").prop("required", true);
                    $("#shift3 > .SRKSRequired").prop("required", true);
                    $("#shift4 > .form-control").prop("required", false);
                }
                else if (NumberOfShifts == 4) {
                    $("#shift1").show();
                    $("#shift2").show();
                    $("#shift3").show();
                    $("#shift4").show();
                    $("#shift2 > .form-control").prop("required", true);
                    $("#shift3 > .form-control").prop("required", true);
                    $("#shift4 > .form-control").prop("required", true);
                }
            });
        });
    });


</script>

@*Radio Button Select*@
<script>
    $(function (e) {
        if ('@ViewBag.radiobutton' == "Plant") {
            $("#Plant").prop('checked', 'checked');
            $("#method").val('@ViewBag.radiobutton');
        }
        if ('@ViewBag.radiobutton' == "Shop") {
            $("#Shop").prop('checked', 'checked');
            $("#method").val('@ViewBag.radiobutton');
        }
        if ('@ViewBag.radiobutton' == "Cell") {
            $("#Cell").prop('checked', 'checked');
            $("#method").val('@ViewBag.radiobutton');
        }
        if ('@ViewBag.radiobutton' == "Machine") {
            $("#Machine").prop('checked', 'checked');
            $("#method").val('@ViewBag.radiobutton');
        }
    });
</script>

@*Time Picker  Code*@
<script type="text/javascript">
    var j = jQuery.noConflict();
    j(document).ready(function () {
        j(".fdate").datetimepicker({
            datepicker: false,
            timepicker: true,
            step: 30,
            format: 'H:i'
        });
    });
</script>
