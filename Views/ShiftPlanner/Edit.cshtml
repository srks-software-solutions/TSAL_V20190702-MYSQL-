@model Tata.Models.tblshiftplanner

@{
    ViewBag.Title = "Create";
    var testdata = ViewBag.OverLappingPlanDetails;
    //ViewBag.radiobutton = "Shop"; // Testing
}
<style>
    input {
        font-style: oblique;
        color: blue;
    }
</style>

<style>
    .fields {
        width: 79.5%;
        white-space: nowrap;
    }

    .first {
        display: inline-block;
        width: 10%;
        float: none;
        padding-left: 0px;
        padding-right: -2px;
        margin-right: -2px;
        white-space: nowrap;
    }

    .second {
        display: inline-block;
        padding-right: 0px;
        white-space: normal;
    }

    .pad {
        padding-left: 9%;
    }
</style>


@{
    List<SelectListItem> NextDay = new List<SelectListItem>();
    NextDay.Add(new SelectListItem
    {
        Text = "NO",
        Value = "1",
    });
    NextDay.Add(new SelectListItem
    {
        Text = "YES",
        Value = "0",
    });
}

@using (Html.BeginForm("Edit", "ShiftPlanner", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)  
    <div class="wrp clearfix">@*style="background-color:red" box outside create role*@
        <div class="fluid">
            <div class="widget col-md- grid12">
                <div class="widget-header" style="background-color: red">
                    <div class="widget-title">
                        <span style="font-style: oblique; font-size: 100%">Edit ShiftPlanner Detail</span>
                    </div>
                </div>
                <!-- /widget-header -->

                <div id="Error">
                    @if (TempData["Error"] != null)
                    {
                        <input type="hidden" id="shiftOverrideConfirm" name="shiftOverrideConfirm" value="0" />
                    }
                </div>

                <div class="widget-content pad20f">
                    <label for="input-2" class="stacked-label" style="resize: horizontal; width: 40%">Shift Method Name</label>
                    @Html.DropDownList("ShiftMethod", null, "--Select ShiftMethod--", new { @id = "ShiftMethod", @class = "form-control", @name = "ShiftMethod", @required = "required", @style = "aria-expanded:false;width:89.7%", @value = ViewData["ShiftMethod"] })
                    @Html.ValidationMessageFor(model => model.ShiftMethodID)

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-top: 2%; width: 18%; color: blue; font-style: oblique">ShiftPlanner Name</label>
                    @Html.TextBoxFor(model => model.ShiftPlannerName, new { @id = "ShiftPlannerName", @name = "ShiftPlannerName", @class = "second", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftPlanner Name ", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-left: 2%; width: 20%; color: blue; font-style: oblique">ShiftPlanner Description</label>
                    @Html.TextBoxFor(model => model.ShiftPlannerDesc, new { @id = "ShiftPlannerDesc", @name = "ShiftPlannerDesc", @class = "second", @style = "font-size:75%;width:25%", @placeholder = "Enter ShiftPlanner Description", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; width: 18%; color: blue; font-style: oblique">Start Date</label>
                    @Html.TextBoxFor(model => model.StartDate, "{0:dd-MMM-yyyy}", new { @id = "StartDate", @name = "StartDate", @class = "second fdate", @style = "font-size:75%;width:25%", @placeholder = "Enter StartDate", @required = "required" })

                    <label for="input-1" class="stacked-label first" style="resize: horizontal; padding-left: 2%; width: 20%; color: blue; font-style: oblique">EndDate</label>
                    @Html.TextBoxFor(model => model.EndDate, "{0:dd-MMM-yyyy}", new { @id = "EndDate", @name = "EndDate", @class = "second fdate", @style = "font-size:75%;width:25%", @placeholder = "Enter EndDate ", @required = "required" })

                     <br />
                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; padding-top: 2%; margin-left: 2%; color: blue; font-style: oblique">Plant Name</label>
                    <label for="input-1" class="stacked-label" style="resize: horizontal; padding-top: 2%; margin-left: 2%; width: 20%; color: blue; font-style: oblique">Shop Name</label>
                    <label for="input-1" class="stacked-label" style="resize: horizontal; width: 20%; margin-left: 2%; color: blue; font-style: oblique">Cell Name</label>
                    <label for="input-1" class="stacked-label" style="resize: horizontal; padding-top: 2%; margin-left: 2%; width: 20%; color: blue; font-style: oblique">WorkCenter Name</label>



                    @*@Html.DropDownList("Plant", null, "--Select Plant--", new { @id = "Plant", @class = "stacked-label", @name = "Plant", @required = "required", @style = "margin-left: 2%;aria-expanded:false;width:20%", @value = ViewData["Plant"] })*@
                    @Html.DropDownListFor(model => model.PlantID, ViewBag.Plant as IEnumerable<SelectListItem>, "--Select Plant--", new { @id = "PlantID", @class = "stacked-label", @name = "PlantID", @required = "required", @style = "margin-left: 2%;aria-expanded:false;width:20%" })
                    @Html.ValidationMessageFor(model => model.PlantID)

                    @Html.DropDownListFor(model => model.ShopID, ViewBag.Shop as IEnumerable<SelectListItem>, "--Select Shop--", new { @id = "ShopID", @class = "stacked-label", @name = "ShopID", @style = "margin-left: 2%;aria-expanded:false;width:20%" })
                    @*@Html.DropDownList("Shop", null, "--Select Shop--", new { @id = "Shop", @class = "stacked-label", @name = "Shop", @style = "margin-left: 2%;aria-expanded:false;width:20%", @value = ViewData["Shop"] })*@
                    @Html.ValidationMessageFor(model => model.ShopID)

                    @Html.DropDownListFor(model => model.CellID, ViewBag.Cell as IEnumerable<SelectListItem>, "--Select Cell--", new { @id = "CellID", @class = "stacked-label", @name = "CellID", @style = "margin-left: 2%;aria-expanded:false;width:20%" })
                    @*@Html.DropDownList("Cell", null, "--Select Cell--", new { @id = "Cell", @class = "stacked-label", @name = "Cell", @style = "margin-left: 2%;aria-expanded:false;width:20%", @value = ViewData["Cell"] })*@
                    @Html.ValidationMessageFor(model => model.CellID)

                    @Html.DropDownListFor(model => model.MachineID, ViewBag.WCID as IEnumerable<SelectListItem>, "--Select WorkCenter--", new { @id = "MachineID", @class = "stacked-label", @name = "MachineID", @style = "margin-left: 2%;aria-expanded:false;width:20%" })
                    @*@Html.DropDownList("WorkCenter", null, "--Select WC--", new { @id = "WorkCenter", @class = "stacked-label", @name = "WorkCenter", @style = "margin-left: 2%;aria-expanded:false;width:20%", @value = ViewData["WorkCenter"] })*@
                    @Html.ValidationMessageFor(model => model.MachineID)

                    @*<table>
                        <tr>
                            <td>.</td>
                        </tr>
                        <tr>
                            <td style="padding-left: 30px">
                                <input id="Plant" name="radioname" type="radio" value="Plant" style="height: 18px; width: 18px;" required /><label style="color: black; font-family: Calibri; font-size: 25px; padding-top: 30px"><b>Plant</b></label></td>
                            <td style="padding-left: 40px">
                                <input id="Shop" name="radioname" type="radio" value="Shop" style="height: 18px; width: 18px;" /><label style="color: black; font-family: Calibri; font-size: 25px; padding-top: 30px"><b>Shop</b></label></td>
                            <td style="padding-left: 40px">
                                <input id="Cell" name="radioname" type="radio" value="Cell" style="height: 18px; width: 18px;" /><label style="color: black; font-family: Calibri; font-size: 25px; padding-top: 30px"><b>Cell</b></label></td>
                            <td style="padding-left: 40px">
                                <input id="Machine" name="radioname" type="radio" value="Machine" style="height: 18px; width: 18px;" /><label style="color: black; font-family: Calibri; font-size: 25px; padding-top: 30px"><b>Machine</b></label></td>
                        </tr>
                    </table>
                    <input type="hidden" name="method" id="method" />*@

                    @*dummy drop to get populate values based on  radio button selected*@
                    @* <label for="input-2" class="stacked-label" style="resize: horizontal; width: 40%">Select a Value</label>
                    @Html.DropDownList("SelectedDropDown", null, "-- Please Select --", new { @id = "SelectedDropDown", @class = "form-control", @name = "SelectedDropDown", @required = "required", @style = "aria-expanded:false;width:89.7%", @value = ViewData["SelectedDropdown"] })*@

                    <br />
                    <div style="width: 3%; display: inline-block; height: inherit"></div>
                    @Html.ActionLink(" Back ", "Index", new { }, new { @class = "btn stacked-input fa fa-reply fa-1x", @style = "text-decoration:none;display:inline-block;color:black" })
                    <div style="width: 20%; display: inline-block; height: inherit"></div>
                    <input type="submit" value="Update" id="submitsrks" class="btn orange btn-lg" style="width: 30%; display: inline-block; height: inherit; margin-top: 2%; background-color: orange; color: black; font-size: 95%" />
                </div>

                <!-- /widget-content -->
            </div>
            <!-- /widget -->
        </div>
        <!-- /Class-fluid-->
    </div>
    
    <!-- Modal -->
    <!-- Modal -->
    
                      if (@ViewBag.OverLappingPlanDetails != null)
                      {
    <div id="dialog-confirm" title="Plan Override Confirmation?" style="width: auto; height: 25%">
        <p>
            @*<span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>*@
            @Html.Raw(@ViewBag.OverLappingPlanDetails)
        </p>
    </div>
                      }
    @Html.HiddenFor(model => model.ShiftPlannerID);
    @Html.HiddenFor(model => model.CreatedBy);
    @Html.HiddenFor(model => model.CreatedOn);
    @Html.HiddenFor(model => model.EndDate);
    @Html.HiddenFor(model => model.IsDeleted);
    @Html.HiddenFor(model => model.IsPlanRemoved);
    @Html.HiddenFor(model => model.IsPlanStopped);
    @Html.HiddenFor(model => model.PlanStoppedDate);
    @Html.HiddenFor(model => model.ShiftMethodID);
    @Html.HiddenFor(model => model.ShiftPlannerDesc);
    @Html.HiddenFor(model => model.ShiftPlannerName);
    @Html.HiddenFor(model => model.StartDate);

}

<script src="~/js/jquery-2.1.4.min.js"></script>
<script src="~/Content1/jquery.datetimepicker.js" type="text/javascript"></script>
<script>
    $(".fdate").keypress(function (event) { event.preventDefault(); });
</script>
<script>
    $(function () {
        var a = '@ViewBag.OverLappingPlanDetails';
        if (($.trim(a)).length > 0) {
            $("#dialog-confirm").dialog({
                resizable: true,
                height: 250,
                width:400,
                modal: true,
                buttons: {
                    "Override Plan": function () {
                        //$(this).dialog("close");
                        $("#shiftOverrideConfirm").val(1);
                        var manageradio = $("input:radio[name ='radioname']:checked").val();
                        $("#method").val(manageradio);
                        $("#submitsrks").click();
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                }
            });
        }
    });
</script>

<script>
    setTimeout(function () {
        $('#Error').fadeOut('slow');
    }, 30000); // <-- time in milliseconds
</script>

<script type="text/javascript">
    var j = jQuery.noConflict();
    j(document).ready(function () {
        j(".fdate").datetimepicker({
            minDate: 0,
            datepicker: true,
            timepicker: false,
            format: 'd-M-Y'
        });
    });

    //var fromDateCtrl = $('.fdate');
    //var dp = fromDateCtrl.datepicker();
    //$('#AddDateFromBtn').on('click', function () {
    //    var dp = fromDateCtrl.datepicker();

    //    if (dp.datepicker("getDate") == null) {
    //        dp.datepicker("setDate", "-3");
    //    }

    //    dp.datepicker("show");
    //});

</script>

<script>
    var j = jQuery.noConflict();

    j("#PlantID").on("change", function () {
        $("#ShopID").empty();
        $("#CellID").empty();
        $("#WorkCenterID").empty();
        var selectedID = $("#PlantID option:selected").val();
        $.getJSON("/ShiftPlanner/GetShop", { PlantID: selectedID }, function (data) {
            $.each(data, function (index, item) {
                $("#ShopID").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                //$("#CellID").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
            });
            $("#ShopID").prepend("<option value='' selected='selected'></option>");
            $("#WorkCenterID").prepend("<option value='' selected='selected'></option>");
        });
    });

    j("#ShopID").on("change", function () {
        $("#CellID").empty();
        $("#WorkCenterID").empty();
        var selectedID = $("#ShopID option:selected").val();
        $.getJSON("/ShiftPlanner/GetCell", { ShopID: selectedID }, function (data) {
            $.each(data, function (index, item) {
                $("#CellID").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
            });
            $("#CellID").prepend("<option value='' selected='selected'></option>");
        });

        $.getJSON("/ShiftPlanner/GetWC_Shop", { ShopID: selectedID }, function (data) {
            $.each(data, function (index, item) {
                $("#WorkCenterID").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
            });
            $("#WorkCenterID").prepend("<option value='' selected='selected'></option>");
        });
    });

    j("#CellID").on("change", function () {
        $("#WorkCenterID").empty();
        var selectedID = $("#CellID option:selected").val();
        $.getJSON("/ShiftPlanner/GetWC_Cell", { CellID: selectedID }, function (data) {
            $.each(data, function (index, item) {
                $("#WorkCenterID").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
            });
            $("#WorkCenterID").prepend("<option value='' selected='selected'></option>");
        });
    });
</script>
